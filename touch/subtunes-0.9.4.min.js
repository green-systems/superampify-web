(function(){var a=new Ext.Application({name:"Ext.ux.mattgoldspink.subsonic",defaultUrl:"dashboard",launch:function(b){Ext.ux.mattgoldspink.subsonic.LoginDetails.f="json";Ext.Router.draw(function(c){c.connect("songView/[a-zA-Z0-9]+/[a-zA-Z0-9]+",{controller:"Ext.ux.mattgoldspink.subsonic.controllers.SongView",action:"loadFolder"});c.connect("",{controller:"Ext.ux.mattgoldspink.subsonic.controllers.SongView",action:"loadFolder"})})}})})();Ext.regModel("Ext.ux.mattgoldspink.subsonic.model.Menu",{idProperty:"id",fields:["id","name","iconCls"]});Ext.ux.mattgoldspink.LeftMenuStore=Ext.extend(Ext.data.Store,{constructor:function(a){var b={};Ext.apply(b,Ext.ux.mattgoldspink.subsonic.LoginDetails);Ext.apply(a,{model:"Ext.ux.mattgoldspink.subsonic.model.Menu",id:"Ext.ux.mattgoldspink.subsonic.stores.LeftMenuStore",sorters:[{property:"iconCls",direction:"ASC"},{property:"name",direction:"ASC"}],proxy:{type:"ajax",url:Ext.ux.mattgoldspink.subsonic.apiUrl+"/rest/getPlaylists.view",extraParams:b,requestMethod:"GET",reader:this.makePlaylistReader()}});this.task=new Ext.util.DelayedTask(this.initLogin,this);this.task.delay(50);Ext.ux.mattgoldspink.LeftMenuStore.superclass.constructor.call(this,a)},initLogin:function(){if(!Ext.isEmpty(Ext.ux.mattgoldspink.subsonic.apiUrl)){this.getProxy().url=Ext.ux.mattgoldspink.subsonic.apiUrl+"/rest/getPlaylists.view"}if(!Ext.isEmpty(Ext.ux.mattgoldspink.subsonic.LoginDetails.u)&&!Ext.isEmpty(Ext.ux.mattgoldspink.subsonic.LoginDetails.p)){Ext.apply(this.getProxy().extraParams,Ext.ux.mattgoldspink.subsonic.LoginDetails);this.load();delete this.task}else{this.task.delay(50)}},load:function(a){if(Ext.isEmpty(a)){a={}}a.callback=this.loadMusicFolders;a.scope=this;return Ext.ux.mattgoldspink.LeftMenuStore.superclass.load.call(this,a)},loadMusicFolders:function(a){var b=Ext.apply({},Ext.ux.mattgoldspink.subsonic.LoginDetails);Ext.Ajax.request({url:Ext.ux.mattgoldspink.subsonic.apiUrl+"/rest/getMusicFolders.view",scope:this,params:b,success:function(e){e=Ext.decode(e.responseText);var c=e["subsonic-response"].status;if(c==="ok"){var d;e=e["subsonic-response"];d=e.musicFolders.musicFolder;if(!Ext.isArray(d)){e.musicFolders.musicFolder=[d]}Ext.each(d,function(f){f.typeOfRequest="musicFolder";f.iconCls="music"});this.loadData(e.musicFolders.musicFolder,true)}}})},makePlaylistReader:function(){if(!Ext.isDefined(this.playlistReader)){this.playlistReader=new Ext.data.JsonReader({root:"playlists.playlist",getData:function(b){var a;b=b["subsonic-response"];a=b.playlists.playlist;if(!Ext.isArray(a)){a=[a]}b.playlists.playlist=a;Ext.each(b.playlists.playlist,function(c){if(!c.iconCls){c.iconCls="playlist"}});return b}})}return this.playlistReader},makeMusicFolderReader:function(){if(!Ext.isDefined(this.musicFolderReader)){this.musicFolderReader=new Ext.data.JsonReader({root:"musicFolders.musicFolder",getData:function(b){var a;b=b["subsonic-response"];a=b.musicFolders.musicFolder;if(!Ext.isArray(a)){b.musicFolders.musicFolder=[a]}Ext.each(a,function(c){c.typeOfRequest="musicFolder"});return b}})}return this.musicFolderReader}});Ext.ux.mattgoldspink.NowPlayingLeftPanel=Ext.extend(Ext.Panel,{constructor:function(a){Ext.apply(a,{dock:"bottom",fit:true,height:230,cls:"now-playing",tpl:["<h2>Now Playing:</h2>",'<img src="{[Ext.ux.mattgoldspink.subsonic.apiUrl]}/rest/getCoverArt.view?size=130&id={coverArt}&{[Ext.urlEncode(Ext.ux.mattgoldspink.subsonic.LoginDetails)]}" />','<div class="song-meta">','<div class="meta artist">{artist}</div>','<div class="meta track">{name}</div>','<div class="meta album">{album}</div>',"</div>"],listeners:{afterrender:this.hideEl,scope:this}});Ext.ux.mattgoldspink.NowPlayingLeftPanel.superclass.constructor.call(this,a);Ext.dispatch({controller:"Ext.ux.mattgoldspink.subsonic.controllers.Player",action:"registerPlayListener",listener:this})},hideEl:function(){Ext.defer(this.hide,500,this,[{type:"slide",direction:"down"}])},onPlay:function(a){this.update(a.options.trackdata);this.show({type:"slide",direction:"up"});this.ownerCt.doLayout()}});Ext.ux.mattgoldspink.LeftMenuPanel=Ext.extend(Ext.Panel,{renderTpl:['<h1>Library</h1><div class="{baseCls}-body <tpl if="bodyCls"> {bodyCls}</tpl>"<tpl if="bodyStyle"> style="{bodyStyle}"</tpl>></div>'],constructor:function(){Ext.apply(this,{title:"Library",dock:"left",cls:"leftmenu",fit:true,layout:"fit",dockedItems:[{xtype:"list",store:new Ext.ux.mattgoldspink.LeftMenuStore({}),itemTpl:'<div id="{id}" class="entry {iconCls}">{name}</div>',allowDeselect:false,singleSelect:true,sorters:"iconCls",listeners:{itemtap:this.handleTap,afterrender:this.initialiseSelectedItem,scope:this},fit:true,dock:"top",selectedItemCls:"selected"},new Ext.ux.mattgoldspink.NowPlayingLeftPanel({dock:"bottom"})]});Ext.ux.mattgoldspink.LeftMenuPanel.superclass.constructor.call(this)},initialiseSelectedItem:function(a){Ext.dispatch({controller:"Ext.ux.mattgoldspink.subsonic.controllers.SongView",action:"initLeftBar",leftBar:a})},handleTap:function(d,a,b,c){b=Ext.get(Ext.get(b).query(".entry")[0]);var f=b.id;if(b.hasCls("music")){Ext.dispatch({controller:"Ext.ux.mattgoldspink.subsonic.controllers.SongView",action:"loadFolder",historyUrl:"songView/musicFolder/"+f})}else{Ext.dispatch({controller:"Ext.ux.mattgoldspink.subsonic.controllers.SongView",action:"loadFolder",historyUrl:"songView/playlist/"+f,id:f})}}});Ext.regController("Ext.ux.mattgoldspink.subsonic.controllers.User",{login:function(){Ext.regModel("Ext.ux.mattgoldspink.subsonic.model.User",{fields:["u","p"],proxy:{id:"Ext.ux.mattgoldspink.subsonic.model.User",type:"localstorage"}});this.store=new Ext.data.Store({model:"Ext.ux.mattgoldspink.subsonic.model.User"});this.store.load({scope:this,callback:function(a){if(a.length===0){this.loginForm=this.makeLoginForm();this.loginForm.show("pop")}else{Ext.apply(Ext.ux.mattgoldspink.subsonic.LoginDetails,a[0].data);this.doAfterLogin()}}})},doAfterLogin:function(){Ext.dispatch({controller:"Ext.ux.mattgoldspink.subsonic.controllers.MusicStore",action:"initialise"})},makeLoginForm:function(){return new Ext.Panel({floating:true,modal:true,centered:true,hideMaskOnTap:true,dockedItems:[{title:"Login",xtype:"toolbar",dock:"top"}],items:[{xtype:"form",items:[{xtype:"fieldset",instructions:"Please enter the information above.",defaults:{labelWidth:"35%"},items:[{xtype:"textfield",name:"u",label:"Username",placeHolder:"username",required:true,useClearIcon:true},{xtype:"passwordfield",name:"p",label:"Password",required:true,useClearIcon:true}]},{xtype:"fieldset",items:[{xtype:"button",text:"Login",scope:this,handler:this.doLogin}]}]}]})},doLogin:function(c){var d=c.ownerCt.ownerCt,a=d.getValues(),f=a.u,b=a.p;this.loginForm.hide("pop");Ext.Msg.show({msg:"Verifying your username and password",width:300});var e={u:f,p:"enc:"+Ext.ux.mattgoldspink.subsonic.hexEncode(b)};Ext.apply(e,Ext.ux.mattgoldspink.subsonic.LoginDetails);Ext.Ajax.request({url:Ext.ux.mattgoldspink.subsonic.apiUrl+"/rest/ping.view",scope:this,success:function(h){h=Ext.decode(h.responseText);var g=h["subsonic-response"].status;if(g==="ok"){this.store.add({u:e.u,p:e.p});this.store.sync();Ext.apply(Ext.ux.mattgoldspink.subsonic.LoginDetails,{u:e.u,p:e.p});this.loginForm.destroy();Ext.dispatch({controller:"Ext.ux.mattgoldspink.subsonic.controllers.MusicStore",action:"initialise"})}else{Ext.Msg.hide();Ext.Msg.setIcon(Ext.MessageBox.ERROR);Ext.Msg.alert("Error","There was an error logging please check your credentials: <br/>"+h.responseText,function(){this.loginForm.show("pop");d.reset()})}},failure:function(){this.login()},params:e})}});Ext.regController("Ext.ux.mattgoldspink.subsonic.controllers.SongView",{initLeftBar:function(a){this.leftBarList=a.leftBar},loadFolder:function(b){var e,c,a,d="id";if(Ext.isDefined(b.historyUrl)){e=b.historyUrl.split("/")[2];c=b.historyUrl.split("/")[1]}a=this.getStore();if((b.initComplete||this.initComplete)&&Ext.isDefined(a)){if(c==="musicDirectory"||c==="indexes"){a.setupMusicDirectoryCall()}else{if(c==="playlist"){a.setupPlaylistCall();if(!Ext.isDefined(this.task)){this.task=new Ext.util.DelayedTask(this.setSelectedMenuItem(e),this)}this.task.delay(50)}else{a.setupIndexesCall();d="musicFolderId";if(!Ext.isDefined(this.task)){this.task=new Ext.util.DelayedTask(this.setSelectedMenuItem(e),this)}this.task.delay(50)}}a.getProxy().extraParams[d]=e;a.clearFilter();a.load();this.initComplete=true}},setSelectedMenuItem:function(a){return function(){var b=this.getLeftBarStore(),c=b.getAt(b.find("id",a));if(!Ext.isEmpty(c)){this.leftBarList.getSelectionModel().select(c);delete this.task}else{this.task.delay(50)}}},getStore:function(){if(!Ext.isDefined(this.store)){this.store=Ext.StoreMgr.get("Ext.ux.mattgoldspink.subsonic.stores.MusicStore")}return this.store},getLeftBarStore:function(){if(!Ext.isDefined(this.leftBarStore)){this.leftBarStore=Ext.StoreMgr.get("Ext.ux.mattgoldspink.subsonic.stores.LeftMenuStore")}return this.leftBarStore}});Ext.regController("Ext.ux.mattgoldspink.subsonic.controllers.Setup",{urls:["","/subsonic","/music"],params:{},i:-1,detect:function(){if(!Ext.isDefined(Ext.ux.mattgoldspink.subsonic.apiUrl)){Ext.apply(this.params,Ext.ux.mattgoldspink.subsonic.LoginDetails);this.makeRequest()}else{Ext.dispatch({controller:"Ext.ux.mattgoldspink.subsonic.controllers.User",action:"login"})}},doSuccess:function(a){var b=Ext.decode(a.responseText);if(b){Ext.Msg.hide();window.subtunes.userPrefsStore.setApiUrl(this.urls[this.i]);Ext.dispatch({controller:"Ext.ux.mattgoldspink.subsonic.controllers.User",action:"login"});Ext.dispatch({controller:"Ext.ux.mattgoldspink.subsonic.controllers.Player",action:"initialise"})}else{this.makeRequest()}},doFailure:function(a){if(a.status===404){this.makeRequest()}else{this.doSuccess(a)}},makeRequest:function(){if(this.i===this.urls.length){Ext.Msg.hide();Ext.Msg.prompt("Subsonic url","Enter the url to subsonic:",function(b,c){if(b=="ok"){this.urls.push(c);Ext.Msg.hide()}})}else{var a=window.location;Ext.Msg.show({msg:"Attempting to auto discover subsonic api url...<br>Testing: "+a.protocol+"//"+a.host+this.urls[++this.i],buttons:false});Ext.Ajax.request({url:this.urls[this.i]+"/rest/ping.view",params:this.params,scope:this,success:this.doSuccess,failure:this.doFailure})}}});Ext.regController("Ext.ux.mattgoldspink.subsonic.controllers.Player",{playListener:[],currentPlaylist:[],currentTrackId:undefined,volume:undefined,shuffle:false,repeatMode:"off",setVolume:function(a){this.volume=a.value;if(Ext.isDefined(this.currentTrackId)){soundManager.setVolume(this.currentTrackId,a.value)}Ext.each(this.currentPlaylist,function(b){b.setVolume(a.value)})},playTracks:function(c){var b=c.tracks,a=c.startAtTrack;this.disposeOfCurrent();b.each(function(d,e){var g=d.get("id");var f={id:"music"+g,url:Ext.ux.mattgoldspink.subsonic.apiUrl+"/rest/stream.view?"+Ext.urlEncode(Ext.ux.mattgoldspink.subsonic.LoginDetails)+"&id="+g,autoLoad:false,autoPlay:false,trackdata:d.data,onload:this.handleOnLoad,onplay:this.handleOnPlay,onresume:this.handleOnPlay,onpause:this.handleOnPause,onfinish:this.handleOnFinish,onstop:this.handleOnStop,whileplaying:this.handleWhilePlaying,volume:this.volume};if(e===(a+1)){this.currentTrackId="music"+g;this.makeSound(f).play()}this.currentPlaylist.push(f)},this)},makeSound:function(a){return soundManager.createSound(a)},disposeOfCurrent:function(){Ext.each(this.currentPlaylist,function(a){try{a.stop();a.destruct()}catch(b){}});this.currentPlaylist=[]},skipInto:function(a){soundManager.setPosition(this.currentTrackId,a.position*1000)},resumeCurrent:function(){if(Ext.isDefined(this.currentTrackId)&&Ext.isDefined(this.currentPlaylist)){var a=soundManager.getSoundById(this.currentTrackId);if(a.playState===0){a.play()}else{a.resume()}a.setVolume(this.volume)}},pauseCurrent:function(){soundManager.pause(this.currentTrackId)},stopCurrent:function(){soundManager.stop(this.currentTrackId)},skipCurrent:function(){if(Ext.isDefined(this.currentTrackId)&&Ext.isDefined(this.currentPlaylist)){var a=soundManager.getSoundById(this.currentTrackId);if(!a.paused){a.stop()}this.doOnFinish({track:a,skipping:true})}},skipBackward:function(){if(Ext.isDefined(this.currentTrackId)&&Ext.isDefined(this.currentPlaylist)){var c=soundManager.getSoundById(this.currentTrackId);if(c.position/1000>3){soundManager.setPosition(this.currentTrackId,0)}else{for(var b=0;b<this.currentPlaylist.length;b++){var a=this.currentPlaylist[b];if(a===c){if(b-1>-1){var d=this.currentPlaylist[b-1];soundManager.stop(this.currentTrackId);this.makeSound(d).play();this.currentTrackId=d.id;return}else{soundManager.setPosition(this.currentTrackId,0)}}}}}},initialise:function(){if(soundManager.supported()){soundManager.onplay=this.handleOnPlay;soundManager.onpause=this.handleOnPause;soundManager.onfinish=this.handleOnFinish}},handleOnPlay:function(){Ext.dispatch({controller:"Ext.ux.mattgoldspink.subsonic.controllers.Player",action:"doOnPlay",item:this})},handleOnLoad:function(){},doOnPlay:function(a){Ext.each(this.playListener,function(b){b.onPlay(a.item)})},handleOnPause:function(){},handleOnStop:function(){},doOnFinish:function(j){var a,h=j.track,e=j.skipping;if(!e&&this.repeatMode==="one"){a=h}else{if(!this.shuffle){for(var c=0;c<this.currentPlaylist.length;c++){var b=this.currentPlaylist[c];if(b.id===h.sID&&c+1<this.currentPlaylist.length){a=this.currentPlaylist[c+1];break}}if(a===undefined&&this.repeatMode==="all"){a=this.currentPlaylist[0]}}else{var f=this.currentPlaylist.length,d=Math.floor(Math.random()*f);a=this.currentPlaylist[d]}}if(!h.paused){if(!e||(e&&h.playState!==1)){if(!e){this.handleOnStop.apply(h,[])}if(a){this.makeSound(a).play()}}}else{if(h.playState===0){this.handleOnStop.apply(h,[])}else{h.stop()}if(a){var g=this.makeSound(a);g.load();g.pause()}}if(a){this.currentTrackId=a.id}else{this.currentTrackId=this.currentPlaylist[0].id}},handleOnFinish:function(){Ext.dispatch({controller:"Ext.ux.mattgoldspink.subsonic.controllers.Player",action:"doOnFinish",track:this,skipping:false})},handleVolumeChange:function(){for(var a=0;a<this.volume.length;a++){try{}catch(b){}}},doShuffleToggle:function(a){this.shuffle=!this.shuffle},handleRepeat:function(a){this.repeatMode=a},registerVolumeDisplay:function(a){this.volume.push(a.volume)},registerPlayListener:function(a){this.playListener.push(a.listener)}});Ext.regController("Ext.ux.mattgoldspink.subsonic.controllers.MusicStore",{initialise:function(){this.store=Ext.StoreMgr.get("Ext.ux.mattgoldspink.subsonic.stores.MusicStore");var a={};Ext.apply(a,Ext.ux.mattgoldspink.subsonic.LoginDetails);this.store.getProxy().extraParams=a;this.task=new Ext.util.DelayedTask(this.doDispatch,this);this.doDispatch()},doDispatch:function(){var b,a;b=window.location.hash.substring(1);if(Ext.isEmpty(b)){a=Ext.StoreMgr.get("Ext.ux.mattgoldspink.subsonic.stores.LeftMenuStore").first();if(!Ext.isEmpty(a)&&a.getId()&&a.get("iconCls")==="music"){b="/musicFolder/"+a.getId()}}if(!Ext.isEmpty(b)){Ext.dispatch({controller:"Ext.ux.mattgoldspink.subsonic.controllers.SongView",action:"loadFolder",initComplete:true,historyUrl:b});delete this.task}else{this.task.delay(50)}}});Ext.regModel("Ext.ux.mattgoldspink.subsonic.model.Music",{idProperty:"id",fields:Ext.ux.mattgoldspink.subsonic.Fields});Ext.ux.mattgoldspink.subsonic.stores.MusicStore=Ext.extend(Ext.data.Store,{constructor:function(a){var b={};Ext.apply(b,Ext.ux.mattgoldspink.subsonic.LoginDetails);Ext.apply(a,{model:"Ext.ux.mattgoldspink.subsonic.model.Music",id:"Ext.ux.mattgoldspink.subsonic.stores.MusicStore",sorters:"name",getGroupString:function(c){if(c.get("isDir")){var d=c.get("name");if(d.length>0){return c.get("name")[0].toUpperCase()}}return""},proxy:{type:"ajax",url:Ext.ux.mattgoldspink.subsonic.apiUrl+"/rest/getIndexes.view",extraParams:b,requestMethod:"GET",reader:this.makeIndexesReader()}});Ext.ux.mattgoldspink.subsonic.stores.MusicStore.superclass.constructor.call(this,a);this.addAfterLoadListeners()},addAfterLoadListeners:function(){this.on("load",this.handleLoad,this)},handleLoad:function(b,a,c){Ext.Msg.hide();if(this.getProxy().url===Ext.ux.mattgoldspink.subsonic.apiUrl+"/rest/getIndexes.view"){this.setupMusicDirectoryCall()}},loadNextData:function(d){var c=this.getById(d),b=c.get("typeOfRequest"),a="id";if(b==="musicDirectory"||b==="indexes"){this.setupMusicDirectoryCall()}else{if(b==="musicFolder"){this.setupIndexesCall();a="musicFolderId"}}if(c.get("suffix")!=="mp3"){this.getProxy().extraParams[a]=d;this.clearFilter();this.load()}},setupIndexesCall:function(){this.getProxy().url=Ext.ux.mattgoldspink.subsonic.apiUrl+"/rest/getIndexes.view";this.getProxy().setReader(this.makeIndexesReader())},setupMusicDirectoryCall:function(){this.getProxy().url=Ext.ux.mattgoldspink.subsonic.apiUrl+"/rest/getMusicDirectory.view";this.getProxy().setReader(this.makeMusicDirectoryReader())},setupPlaylistCall:function(){this.getProxy().url=Ext.ux.mattgoldspink.subsonic.apiUrl+"/rest/getPlaylist.view";this.getProxy().setReader(this.makePlaylistReader())},makePlaylistReader:function(){if(!Ext.isDefined(this.playlistReader)){this.playlistReader=new Ext.data.JsonReader({root:"playlist.entry",getData:function(b){var a;b=b["subsonic-response"];a=b.playlist.entry;if(!Ext.isArray(a)){b.playlist.entry=[a]}Ext.each(a,function(c){c.typeOfRequest="playlist";c.name=c.title});return b}})}return this.playlistReader},makeMusicDirectoryReader:function(){if(!Ext.isDefined(this.musicDirectoryReader)){this.musicDirectoryReader=new Ext.data.JsonReader({root:"directory.child",getData:function(b){var a;b=b["subsonic-response"];a=b.directory.child;if(!Ext.isArray(a)){b.directory.child=[a]}Ext.each(a,function(c){if(!c.name){c.name=c.title;delete c.title}c.typeOfRequest="musicDirectory"});return b}})}return this.musicDirectoryReader},makeIndexesReader:function(){if(!Ext.isDefined(this.indexesReader)){this.indexesReader=new Ext.data.JsonReader({root:"indexes.index",getData:function(b){var a;b=b["subsonic-response"];a=b.indexes.index;b.indexes.index=[];if(!Ext.isArray(a)){a=[a]}Ext.each(a,function(c){Ext.each(c.artist,function(d){d.typeOfRequest="indexes";d.isDir=true;b.indexes.index.push(d)})});return b}})}return this.indexesReader}});Ext.ux.mattgoldspink.VolumeSlider=Ext.extend(Ext.form.Slider,{constructor:function(){Ext.apply(this,{value:100,minValue:0,maxValue:100,cls:"volumeslider",height:40,listeners:{change:function(c,a,d,b){Ext.dispatch({controller:"Ext.ux.mattgoldspink.subsonic.controllers.Player",action:"setVolume",volume:d})}}});Ext.ux.mattgoldspink.VolumeSlider.superclass.constructor.call(this)}});Ext.ux.mattgoldspink.TrackPositionSlider=Ext.extend(Ext.form.Slider,{constructor:function(){Ext.apply(this,{value:0,minValue:0,maxValue:100,cls:"trackpositionslider",draggable:false});Ext.ux.mattgoldspink.TrackPositionSlider.superclass.constructor.call(this)}});Ext.ux.mattgoldspink.ControlButtonPanel=Ext.extend(Ext.Panel,{constructor:function(){Ext.apply(this,{html:'<div class="backbutton button"></div><div id="mainplay" class="playstatebutton button"></div><div class="forwardbutton button"></div>',height:50,cls:"controlbuttons",listeners:{afterrender:this.registerListeners,body:{tap:this.handleTap,delegate:".button",scope:this}}});Ext.ux.mattgoldspink.ControlButtonPanel.superclass.constructor.call(this)},handleTap:function(a,c,b){c=Ext.get(c);if(c.hasCls("playstatebutton")){this.handlePlayTap(a,c,b)}else{if(c.hasCls("backbutton")){this.handleBackButtonTap(a,c,b)}else{if(c.hasCls("forwardbutton")){this.handleForwardButtonTap(a,c,b)}}}},handlePlayTap:function(a,c,b){if(c.hasCls("play")){Ext.dispatch({controller:"Ext.ux.mattgoldspink.subsonic.controllers.Player",action:"pauseCurrent"});c.removeCls("play")}else{Ext.dispatch({controller:"Ext.ux.mattgoldspink.subsonic.controllers.Player",action:"resumeCurrent"});c.addCls("play")}},handleBackButtonTap:function(a,c,b){Ext.dispatch({controller:"Ext.ux.mattgoldspink.subsonic.controllers.Player",action:"skipBackward"})},handleForwardButtonTap:function(a,c,b){Ext.dispatch({controller:"Ext.ux.mattgoldspink.subsonic.controllers.Player",action:"skipCurrent"})},registerListeners:function(){this.playbutton=Ext.get(Ext.get(this.el).query(".playstatebutton")[0]);Ext.dispatch({controller:"Ext.ux.mattgoldspink.subsonic.controllers.Player",action:"registerPlayListener",listener:this})},onPlay:function(a){this.playbutton.addCls("play")}});Ext.ux.mattgoldspink.SearchField=Ext.extend(Ext.form.FormPanel,{constructor:function(){Ext.apply(this,{cls:"x-toolbar",items:[{xtype:"searchfield",placeHolder:"Search",height:40}]});Ext.ux.mattgoldspink.SearchField.superclass.constructor.call(this)}});Ext.ux.mattgoldspink.PlayerBarCenter=Ext.extend(Ext.Panel,{buttonPanel:new Ext.ux.mattgoldspink.ControlButtonPanel(),trackPositionSlider:new Ext.ux.mattgoldspink.TrackPositionSlider(),constructor:function(){Ext.apply(this,{items:[this.buttonPanel,this.trackPositionSlider]});Ext.ux.mattgoldspink.PlayerBarCenter.superclass.constructor.call(this)}});Ext.ux.mattgoldspink.PlayerBar=Ext.extend(Ext.Panel,{volumeSlider:new Ext.ux.mattgoldspink.VolumeSlider(),playerBarCenter:new Ext.ux.mattgoldspink.PlayerBarCenter(),searchField:new Ext.ux.mattgoldspink.SearchField(),constructor:function(){Ext.apply(this,{cls:"playerbar",layout:{type:"hbox",align:"center"},dock:"top",defaults:{flex:1},items:[this.volumeSlider,this.playerBarCenter,this.searchField],height:72});Ext.ux.mattgoldspink.PlayerBar.superclass.constructor.call(this);this.registerListeners()},registerListeners:function(){this.on("afterlayout",this.updateSliderProportions,this)},updateSliderProportions:function(){this.volumeSlider.onOrientationChange();this.playerBarCenter.buttonPanel.onOrientationChange()}});Ext.ux.mattgoldspink.ArtistViewPanel=Ext.extend(Ext.Panel,{constructor:function(){Ext.apply(this,{items:[{xtype:"list",fit:true,listeners:{itemTap:this.handleItemTap},itemTpl:this.getSongViewTpl(),grouped:false,store:Ext.StoreMgr.get("Ext.ux.mattgoldspink.subsonic.stores.MusicStore"),itemSelector:".row"}],cls:"grid artist",fit:true,layout:"fit"});Ext.ux.mattgoldspink.ArtistViewPanel.superclass.constructor.call(this)},getSongViewTpl:function(){return new Ext.XTemplate('<div id="{id}" class="row">','<img src="{[Ext.ux.mattgoldspink.subsonic.apiUrl]}/rest/getCoverArt.view?size=50&id={coverArt}&{[Ext.urlEncode(Ext.ux.mattgoldspink.subsonic.LoginDetails)]}" />','<tpl if="isDir">','<div class="dir"><strong>{name}</strong></div>',"</tpl>",'<tpl if="isDir === false || isDir === undefined">','<div class="cell title"><strong>{[Ext.util.Format.ellipsis(values.name, 22)]}</strong></div>','<div class="cell">{[Ext.util.Format.ellipsis(values.artist, 22)]}</div>','<div class="cell">{[Ext.util.Format.ellipsis(values.album, 22)]}</div>','<div class="cell duration">{[this.renderDuration(values.duration)]}</div>',"</tpl>","</div>",{renderDuration:function(b){var a=(b%60).toString();while(a.length<2){a=0+""+a}return Math.floor(b/60)+":"+a}})},handleItemTap:function(d,b,c,a){Ext.dispatch({controller:"Ext.ux.mattgoldspink.subsonic.controllers.SongView",action:"loadFolder",historyUrl:"artistView/"+c.id,id:c.id})}});Ext.ux.mattgoldspink.AjaxGridPanel=Ext.extend(Ext.Panel,{constructor:function(){Ext.apply(this,{items:[{xtype:"list",fit:true,listeners:{itemTap:this.handleItemTap},itemTpl:this.getSongViewTpl(),grouped:true,store:new Ext.ux.mattgoldspink.subsonic.stores.MusicStore({}),indexBar:true,itemSelector:".row"}],cls:"grid",fit:true,layout:"fit"});Ext.ux.mattgoldspink.AjaxGridPanel.superclass.constructor.call(this);this.list=this.items.items[0];this.list.store.on("datachanged",this.resetScroll,this)},resetScroll:function(){this.list.scroller.scrollTo({x:0,y:0})},getSongViewTpl:function(){return new Ext.XTemplate('<div id="{id}" class="row {[values.isDir? "dir" : "track"]}">','<tpl if="isDir">','<div class="{typeOfRequest}"><strong>{name}</strong></div>',"</tpl>",'<tpl if="isDir === false || isDir === undefined">','<div class="cell title"><strong>{[Ext.util.Format.ellipsis(values.name, 22)]}</strong></div>','<div class="cell">{[Ext.util.Format.ellipsis(values.artist, 20)]}</div>','<div class="cell">{[Ext.util.Format.ellipsis(values.album, 20)]}</div>','<div class="cell duration">{[this.renderDuration(values.duration)]}</div>',"</tpl>","</div>",{renderDuration:function(b){var a=(b%60).toString();while(a.length<2){a=0+""+a}return Math.floor(b/60)+":"+a}})},handleItemTap:function(d,b,c,a){if(Ext.get(c).hasCls("dir")){Ext.dispatch({controller:"Ext.ux.mattgoldspink.subsonic.controllers.SongView",action:"loadFolder",historyUrl:"songView/"+Ext.get(c).first("div",true).className.trim()+"/"+c.id,id:c.id})}else{Ext.dispatch({controller:"Ext.ux.mattgoldspink.subsonic.controllers.Player",action:"playTracks",tracks:Ext.StoreMgr.get("Ext.ux.mattgoldspink.subsonic.stores.MusicStore").data,startAtTrack:b})}}});Ext.ux.mattgoldspink.MusicViewCardPanel=Ext.extend(Ext.Panel,{constructor:function(){Ext.apply(this,{layout:"card",id:"Ext.ux.mattgoldspink.MusicViewCardPanel",fit:true,items:[new Ext.ux.mattgoldspink.AjaxGridPanel(),new Ext.ux.mattgoldspink.ArtistViewPanel({})]});Ext.ux.mattgoldspink.MusicViewCardPanel.superclass.constructor.call(this)}});Ext.ux.mattgoldspink.CenterPanel=Ext.extend(Ext.Panel,{constructor:function(){Ext.apply(this,{dockedItems:[new Ext.ux.mattgoldspink.LeftMenuPanel()],items:new Ext.ux.mattgoldspink.MusicViewCardPanel(),fit:true,layout:"fit"});Ext.ux.mattgoldspink.CenterPanel.superclass.constructor.call(this)}});Ext.ux.mattgoldspink.BottomBar=Ext.extend(Ext.Toolbar,{constructor:function(a){Ext.apply(this,a,{ui:"light",dock:"bottom",cls:"bottom-bar",layout:{pack:"center"},items:this.makeButtonGroup()});Ext.ux.mattgoldspink.BottomBar.superclass.constructor.call(this,a)},makeButtonGroup:function(){this.buttonGroup=[{xtype:"segmentedbutton",allowDepress:true,items:[{text:"Songs",handler:this.handleSongsClick,pressed:true},{text:"Artists",handler:this.handleArtistsClick},{text:"Albums",handler:this.handleAlbumsClick}]}];return this.buttonGroup},handleSongsClick:function(){Ext.getCmp("Ext.ux.mattgoldspink.MusicViewCardPanel").setActiveItem(0)},handleArtistsClick:function(){Ext.getCmp("Ext.ux.mattgoldspink.MusicViewCardPanel").setActiveItem(1)},handleAlbumsClick:function(){Ext.getCmp("Ext.ux.mattgoldspink.MusicViewCardPanel").setActiveItem(2)}});Ext.setup({tabletStartupScreen:"tablet_startup.png",phoneStartupScreen:"phone_startup.png",icon:"icon.png",glossOnIcon:false,onReady:function(){var a=new Ext.Panel({fullscreen:true,layout:"fit",dockedItems:[new Ext.ux.mattgoldspink.PlayerBar(),new Ext.ux.mattgoldspink.BottomBar()],items:[new Ext.ux.mattgoldspink.CenterPanel()],listeners:{afterrender:function(){Ext.dispatch({controller:"Ext.ux.mattgoldspink.subsonic.controllers.Setup",action:"detect"})}}})}});